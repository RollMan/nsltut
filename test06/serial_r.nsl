#define RX_CLK 650
#define STBIT_DEL 3
declare serial_r {
  input RDX;
  output RX_BUSY;
  output RDX_V[8];
}

declare counter {
  input reset;
  output f[16];
  func_in countup();
}
module counter {
  reg cnt[32] = 0;
  reg f_r[16] = 0;
  if(~reset){
    cnt := 0;
    f_r = 0;
  }

  f = f_r;

  function countup {
    any{
      cnt == RX_CLK:{
        cnt := 32'd0;
        f_r++;
      }
      cnt != RX_CLK:{
        cnt++;
      }
    }
  }
}

module serial_r {
  reg counter_reset = 1'b1;
  counter counter_i;
  proc_name = receive();

  counter_i.reset = counter_reset;

  any{
    RDX == 0:{
      counter_i.countup();
      if(counter.f == STBIT_DEL){
        receive();
        counter_reset = 0;
      }
    }
    RDX != 0:{
      rdx_cnt := 0;
    }
  }

  proc receive {
    
  }
}
